<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.1.xsd">


    <!-- an alternative method to the standard role-based voting mechanism implemented
         by RoleVoter is the use of Spring Expression Language (SpEL) -->
    <security:http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />


        <security:intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
        <security:intercept-url pattern="/favicon.ico" access="permitAll"/>
        <security:intercept-url pattern="/login.xhtml" access="permitAll"/>

        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <!-- This baseline configuration will look for the logout URL specified in the logout-url
             attribute and log the user out. -->
        <!-- invalidate-session: If true, the user's HTTP session will be invalidated when
             they log out. In some cases, this isn't desired (for example,
             when a user has a shopping cart). -->
        <security:logout invalidate-session="true"
                         logout-success-url="/"
                         logout-url="/logout.do"/>
    </security:http>

    <bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login.xhtml"/>
    </bean>

    <!-- This is only necessary because we want to remove spring security specific names -->
    <!-- START -->
    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry" />
        <property name="expiredUrl" value="/login.xhtml?errorcode=201" />
	</bean>
    <bean id="authenticationProcessingFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="filterProcessesUrl" value="/login.do" />
        <property name="usernameParameter" value="username" />
        <property name="passwordParameter" value="password" />
        <!--<property name="filterProcessesUrl" value="/j_spring_security_check" />-->
        <!--<property name="usernameParameter" value="j_username" />-->
        <!--<property name="passwordParameter" value="j_password" />-->
        <property name="authenticationManager" ref="authenticationManager" />
        <!--<property name="rememberMeServices" ref="rememberMeServices" />-->
        <!--<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />-->
        <!--<property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>-->
        <property name="sessionAuthenticationStrategy" ref="concurrentSessionControlStrategy"/>
    </bean>
    <bean id="concurrentSessionControlStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <property name="maximumSessions" value="1" />
        <!-- because we want to migrate sessions (oldest session will be deactivated) -->
        <property name="exceptionIfMaximumExceeded" value="false" />
	</bean>
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
    <!-- END -->



    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user authorities="ROLE_USER" name="guest" password="guest"/>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>
